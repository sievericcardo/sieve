{"version":3,"file":"static/js/313.8d2a0ecd.chunk.js","mappings":"4KACO,MAAMA,EAAM,kCAENC,EAAa,KACT,CACbC,QAAS,CACP,eAAgBC,aAAaC,QAAQ,SACrC,8BAA+B,IAC/B,+BAAgC,mD,0HCEtC,MAAMC,GAAOC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACzBC,gBAAiB,0BACjBC,UAAW,SACXC,aAAc,OACdC,QAAS,OACTC,MAAO,OACPC,WAAY,OACZC,YAAa,SAsCf,UAnCgB,KACd,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,OACRC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IAE3CC,EAAAA,EAAAA,YAAU,KAERC,YAAW,KACTH,GAAa,EAAM,GAClB,IAAK,GACP,IAEH,MAAOI,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,CAAC,GASxC,OAPAC,EAAAA,EAAAA,YAAU,MACRI,EAAAA,EAAAA,IAAWT,GAAIU,MAAMC,IACnBH,EAAWG,EAAK,GAChB,GAED,KAGD,SAACpB,EAAI,UACFW,GACC,SAAC,IAAa,KAEd,iCACA,UAAC,IAAU,CAACU,QAAQ,KAAI,WAAC,SAAC,IAAY,IAAG,IAAEL,EAAQM,SACnD,SAAC,IAAU,CAACD,QAAQ,YAAW,SAAEL,EAAQO,eACzC,SAAC,IAAa,UAAGC,mBAAmBC,OAAOT,EAAQU,aAGhD,C,4CC7CX,IAJsB,KACb,gBAAKC,UAAU,U,yLCCjB,MAAMC,EAAcC,UACzB,IAEE,aADuBC,EAAAA,EAAAA,IAAW,GAAEnC,EAAAA,eACpByB,IAKlB,CAJE,MAAOW,GAAQ,IAAD,EACdC,EAAAA,GAAAA,MAA0B,QAAf,EAACD,EAAME,gBAAQ,aAAd,EAAgBb,KAAM,CAChCc,SAAUF,EAAAA,GAAAA,SAAAA,cAEd,GAGWd,EAAaW,UACxB,IAEE,aADsBC,EAAAA,EAAAA,IAAW,GAAEnC,EAAAA,cAAgBc,MACpCW,IAKjB,CAJE,MAAOW,GAAQ,IAAD,EACdC,EAAAA,GAAAA,MAA0B,QAAf,EAACD,EAAME,gBAAQ,aAAd,EAAgBb,KAAM,CAChCc,SAAUF,EAAAA,GAAAA,SAAAA,cAEd,GAGWG,EAAaN,UACxB,IAME,aALMC,EAAAA,EAAAA,KACH,GAAEnC,EAAAA,aACHqB,GACApB,EAAAA,EAAAA,OAEK,CAKT,CAJE,MAAOmC,GAAQ,IAAD,EACdC,EAAAA,GAAAA,MAA0B,QAAf,EAACD,EAAME,gBAAQ,aAAd,EAAgBb,KAAM,CAChCc,SAAUF,EAAAA,GAAAA,SAAAA,cAEd,GAGWI,EAAgBP,MAAOQ,EAAgB5B,KAClD,IAME,aALsBqB,EAAAA,EAAAA,IACnB,GAAEnC,EAAAA,cAAgBc,IACnB4B,GACAzC,EAAAA,EAAAA,OAEawB,IAKjB,CAJE,MAAOW,GAAQ,IAAD,EACdC,EAAAA,GAAAA,MAA0B,QAAf,EAACD,EAAME,gBAAQ,aAAd,EAAgBb,KAAM,CAChCc,SAAUF,EAAAA,GAAAA,SAAAA,cAEd,GAGWM,EAAgBT,UAC3B,IAEE,aADsBC,EAAAA,EAAAA,OAAc,GAAEnC,EAAAA,cAAgBc,KAAMb,EAAAA,EAAAA,OAC7CwB,IAKjB,CAJE,MAAOW,GAAQ,IAAD,EACdC,EAAAA,GAAAA,MAA0B,QAAf,EAACD,EAAME,gBAAQ,aAAd,EAAgBb,KAAM,CAChCc,SAAUF,EAAAA,GAAAA,SAAAA,cAEd,E","sources":["api/index.js","components/pages/Project.js","components/ui/DynamicLoader/index.js","hooks/projectHooks.js"],"sourcesContent":["// export const url = \"http://127.0.0.1:5000/api\";\nexport const url = \"https://sieve.servebeer.com/api\";\n\nexport const setHeaders = () => {\n  const header = {\n    headers: {\n      \"x-auth-token\": localStorage.getItem(\"token\"),\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n    },\n  };\n\n  return header;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from '@mui/material';\nimport { AllInclusive } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport ReactMarkdown from 'react-markdown';\n\nimport { getProject } from '../../hooks/projectHooks';\nimport DynamicLoader from '../ui/DynamicLoader';\n\nconst Root = styled('div')({\n  backgroundColor: 'rgba(50, 115, 220, 0.8)',\n  marginTop: '1.4rem',\n  marginBottom: '1rem',\n  padding: '1rem',\n  width: '80vw',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n});\n\nconst Project = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulating an API call or any asynchronous task\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000); // Simulate a 3-second loading time\n  }, []);\n\n  const [project, setProject] = useState({});\n\n  useEffect(() => {\n    getProject(id).then((data) => {\n      setProject(data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Root>\n      {isLoading ? (\n        <DynamicLoader />\n      ) : (\n        <>\n        <Typography variant=\"h4\"><AllInclusive /> {project.name}</Typography>\n        <Typography variant=\"subtitle1\">{project.description}</Typography>\n        <ReactMarkdown>{ decodeURIComponent(escape(project.body)) }</ReactMarkdown>\n        </>\n      )}\n    </Root>\n  );\n};\n\nexport default Project;","import React from 'react';\n\nconst DynamicLoader = () => {\n  return <div className=\"loader\"></div>;\n};\n\nexport default DynamicLoader;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { url, setHeaders } from \"../api/index\";\n\nexport const getProjects = async () => {\n  try {\n    const projects = await axios.get(`${url}/projects`);\n    return projects.data;\n  } catch (error) {\n    toast.error(error.response?.data, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  }\n}\n\nexport const getProject = async (id) => {\n  try {\n    const project = await axios.get(`${url}/projects/${id}`);\n    return project.data;\n  } catch (error) {\n    toast.error(error.response?.data, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  }\n}\n\nexport const addProject = async (project) => {\n  try {\n    await axios.post(\n      `${url}/projects`,\n      project,\n      setHeaders()\n    );\n    return true;\n  } catch (error) {\n    toast.error(error.response?.data, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  }\n}\n\nexport const updateProject = async (updatedProject, id) => {\n  try {\n    const project = await axios.put(\n      `${url}/projects/${id}`,\n      updatedProject,\n      setHeaders()\n    );\n    return project.data;\n  } catch (error) {\n    toast.error(error.response?.data, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  }\n}\n\nexport const deleteProject = async (id) => {\n  try {\n    const project = await axios.delete(`${url}/projects/${id}`, setHeaders());\n    return project.data;\n  } catch (error) {\n    toast.error(error.response?.data, {\n      position: toast.POSITION.BOTTOM_RIGHT,\n    });\n  }\n}\n"],"names":["url","setHeaders","headers","localStorage","getItem","Root","styled","backgroundColor","marginTop","marginBottom","padding","width","marginLeft","marginRight","id","useParams","isLoading","setIsLoading","useState","useEffect","setTimeout","project","setProject","getProject","then","data","variant","name","description","decodeURIComponent","escape","body","className","getProjects","async","axios","error","toast","response","position","addProject","updateProject","updatedProject","deleteProject"],"sourceRoot":""}